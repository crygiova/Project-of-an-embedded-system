
UARTSender.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000546  000005da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000546  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  000005e0  2**0
                  ALLOC
  3 .stab         00000738  00000000  00000000  000005e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000000e7  00000000  00000000  00000d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000088  00000000  00000000  00000dff  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000111  00000000  00000000  00000e87  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000793  00000000  00000000  00000f98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000406  00000000  00000000  0000172b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000095c  00000000  00000000  00001b31  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000c0  00000000  00000000  00002490  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002e4  00000000  00000000  00002550  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000509  00000000  00000000  00002834  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 000000e5  00000000  00000000  00002d3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000038  00000000  00000000  00002e22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 e4       	ldi	r30, 0x46	; 70
  84:	f5 e0       	ldi	r31, 0x05	; 5
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	11 e0       	ldi	r17, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b1 07       	cpc	r27, r17
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 c0 00 	call	0x180	; 0x180 <main>
  a6:	0c 94 a1 02 	jmp	0x542	; 0x542 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <getC>:
#include <util/delay.h>
#include <stdio.h>
//#include "drvUART.h"

int getC()
{
  ae:	df 93       	push	r29
  b0:	cf 93       	push	r28
  b2:	0f 92       	push	r0
  b4:	cd b7       	in	r28, 0x3d	; 61
  b6:	de b7       	in	r29, 0x3e	; 62
	uint8_t c;
	while( !(UCSR0A & 1 << RXC0) );
  b8:	00 00       	nop
  ba:	8b e2       	ldi	r24, 0x2B	; 43
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	fc 01       	movw	r30, r24
  c0:	80 81       	ld	r24, Z
  c2:	88 23       	and	r24, r24
  c4:	d4 f7       	brge	.-12     	; 0xba <getC+0xc>
	c = UDR0;
  c6:	8c e2       	ldi	r24, 0x2C	; 44
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	fc 01       	movw	r30, r24
  cc:	80 81       	ld	r24, Z
  ce:	89 83       	std	Y+1, r24	; 0x01
	//while( !(UCSR0A & 1 << UDRE0) );
	return c;
  d0:	89 81       	ldd	r24, Y+1	; 0x01
  d2:	88 2f       	mov	r24, r24
  d4:	90 e0       	ldi	r25, 0x00	; 0
}
  d6:	0f 90       	pop	r0
  d8:	cf 91       	pop	r28
  da:	df 91       	pop	r29
  dc:	08 95       	ret

000000de <putC>:

int putC(uint8_t data){
  de:	df 93       	push	r29
  e0:	cf 93       	push	r28
  e2:	0f 92       	push	r0
  e4:	cd b7       	in	r28, 0x3d	; 61
  e6:	de b7       	in	r29, 0x3e	; 62
  e8:	89 83       	std	Y+1, r24	; 0x01
	while( !(UCSR0A & 1 << UDRE0) );
  ea:	00 00       	nop
  ec:	8b e2       	ldi	r24, 0x2B	; 43
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	fc 01       	movw	r30, r24
  f2:	80 81       	ld	r24, Z
  f4:	88 2f       	mov	r24, r24
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	80 72       	andi	r24, 0x20	; 32
  fa:	90 70       	andi	r25, 0x00	; 0
  fc:	00 97       	sbiw	r24, 0x00	; 0
  fe:	b1 f3       	breq	.-20     	; 0xec <putC+0xe>
	UDR0 = data;
 100:	8c e2       	ldi	r24, 0x2C	; 44
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	29 81       	ldd	r18, Y+1	; 0x01
 106:	fc 01       	movw	r30, r24
 108:	20 83       	st	Z, r18
	while( !(UCSR0A & 1 << TXC0) );
 10a:	00 00       	nop
 10c:	8b e2       	ldi	r24, 0x2B	; 43
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	fc 01       	movw	r30, r24
 112:	80 81       	ld	r24, Z
 114:	88 2f       	mov	r24, r24
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	80 74       	andi	r24, 0x40	; 64
 11a:	90 70       	andi	r25, 0x00	; 0
 11c:	00 97       	sbiw	r24, 0x00	; 0
 11e:	b1 f3       	breq	.-20     	; 0x10c <putC+0x2e>
	return 0;
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	90 e0       	ldi	r25, 0x00	; 0
}
 124:	0f 90       	pop	r0
 126:	cf 91       	pop	r28
 128:	df 91       	pop	r29
 12a:	08 95       	ret

0000012c <initUART>:


void initUART(uint16_t ubrr ){
 12c:	df 93       	push	r29
 12e:	cf 93       	push	r28
 130:	00 d0       	rcall	.+0      	; 0x132 <initUART+0x6>
 132:	cd b7       	in	r28, 0x3d	; 61
 134:	de b7       	in	r29, 0x3e	; 62
 136:	9a 83       	std	Y+2, r25	; 0x02
 138:	89 83       	std	Y+1, r24	; 0x01
	
	//Init clock generator reg
	UBRR0H = (unsigned char) (ubrr >> 8);
 13a:	80 e4       	ldi	r24, 0x40	; 64
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	29 81       	ldd	r18, Y+1	; 0x01
 140:	3a 81       	ldd	r19, Y+2	; 0x02
 142:	23 2f       	mov	r18, r19
 144:	33 27       	eor	r19, r19
 146:	fc 01       	movw	r30, r24
 148:	20 83       	st	Z, r18
	UBRR0L = (unsigned char) ubrr;
 14a:	89 e2       	ldi	r24, 0x29	; 41
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	29 81       	ldd	r18, Y+1	; 0x01
 150:	fc 01       	movw	r30, r24
 152:	20 83       	st	Z, r18
	//UCSR0A = 0b00000000 //TODO: Rx & Tx "polling"
	UCSR0B = 0b00011000;
 154:	8a e2       	ldi	r24, 0x2A	; 42
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	28 e1       	ldi	r18, 0x18	; 24
 15a:	fc 01       	movw	r30, r24
 15c:	20 83       	st	Z, r18
	UCSR0C = 0b10000110;
 15e:	80 e4       	ldi	r24, 0x40	; 64
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	26 e8       	ldi	r18, 0x86	; 134
 164:	fc 01       	movw	r30, r24
 166:	20 83       	st	Z, r18
	//UCSR0B = (1<<RXEN0)|(1<<TXEN0);
	
	//Set format
	//UCSR0C = (1<<URSEL0)|(1<<USBS0) | (3 << UCSZ01);
	
	fdevopen(putC,getC);
 168:	8f e6       	ldi	r24, 0x6F	; 111
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	27 e5       	ldi	r18, 0x57	; 87
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	b9 01       	movw	r22, r18
 172:	0e 94 dd 00 	call	0x1ba	; 0x1ba <fdevopen>
}
 176:	0f 90       	pop	r0
 178:	0f 90       	pop	r0
 17a:	cf 91       	pop	r28
 17c:	df 91       	pop	r29
 17e:	08 95       	ret

00000180 <main>:



int main(void)
{
 180:	df 93       	push	r29
 182:	cf 93       	push	r28
 184:	0f 92       	push	r0
 186:	cd b7       	in	r28, 0x3d	; 61
 188:	de b7       	in	r29, 0x3e	; 62
	initUART(31);
 18a:	8f e1       	ldi	r24, 0x1F	; 31
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	0e 94 96 00 	call	0x12c	; 0x12c <initUART>
	PORTA = 0xFF;
 192:	8b e3       	ldi	r24, 0x3B	; 59
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	2f ef       	ldi	r18, 0xFF	; 255
 198:	fc 01       	movw	r30, r24
 19a:	20 83       	st	Z, r18
	unsigned char c = 'A';
 19c:	81 e4       	ldi	r24, 0x41	; 65
 19e:	89 83       	std	Y+1, r24	; 0x01
    while(1)
    {
		//c = getC();
		putC('A');
 1a0:	81 e4       	ldi	r24, 0x41	; 65
 1a2:	0e 94 6f 00 	call	0xde	; 0xde <putC>
		//printf("Hello World: %d \r\n", 42);
		//if (c > 'Z') c = 'A';
        //TODO:: Please write your application code
		//_delay_ms(1);
		PORTA = ~PORTA;
 1a6:	8b e3       	ldi	r24, 0x3B	; 59
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	2b e3       	ldi	r18, 0x3B	; 59
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	f9 01       	movw	r30, r18
 1b0:	20 81       	ld	r18, Z
 1b2:	20 95       	com	r18
 1b4:	fc 01       	movw	r30, r24
 1b6:	20 83       	st	Z, r18
		 
    }
 1b8:	f3 cf       	rjmp	.-26     	; 0x1a0 <main+0x20>

000001ba <fdevopen>:
 1ba:	0f 93       	push	r16
 1bc:	1f 93       	push	r17
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	8c 01       	movw	r16, r24
 1c4:	eb 01       	movw	r28, r22
 1c6:	00 97       	sbiw	r24, 0x00	; 0
 1c8:	11 f4       	brne	.+4      	; 0x1ce <fdevopen+0x14>
 1ca:	20 97       	sbiw	r28, 0x00	; 0
 1cc:	c9 f1       	breq	.+114    	; 0x240 <fdevopen+0x86>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	6e e0       	ldi	r22, 0x0E	; 14
 1d4:	70 e0       	ldi	r23, 0x00	; 0
 1d6:	0e 94 28 01 	call	0x250	; 0x250 <calloc>
 1da:	fc 01       	movw	r30, r24
 1dc:	9c 01       	movw	r18, r24
 1de:	00 97       	sbiw	r24, 0x00	; 0
 1e0:	89 f1       	breq	.+98     	; 0x244 <fdevopen+0x8a>
 1e2:	80 e8       	ldi	r24, 0x80	; 128
 1e4:	83 83       	std	Z+3, r24	; 0x03
 1e6:	20 97       	sbiw	r28, 0x00	; 0
 1e8:	71 f0       	breq	.+28     	; 0x206 <fdevopen+0x4c>
 1ea:	d3 87       	std	Z+11, r29	; 0x0b
 1ec:	c2 87       	std	Z+10, r28	; 0x0a
 1ee:	81 e8       	ldi	r24, 0x81	; 129
 1f0:	83 83       	std	Z+3, r24	; 0x03
 1f2:	80 91 06 01 	lds	r24, 0x0106
 1f6:	90 91 07 01 	lds	r25, 0x0107
 1fa:	00 97       	sbiw	r24, 0x00	; 0
 1fc:	21 f4       	brne	.+8      	; 0x206 <fdevopen+0x4c>
 1fe:	f0 93 07 01 	sts	0x0107, r31
 202:	e0 93 06 01 	sts	0x0106, r30
 206:	01 15       	cp	r16, r1
 208:	11 05       	cpc	r17, r1
 20a:	e1 f0       	breq	.+56     	; 0x244 <fdevopen+0x8a>
 20c:	11 87       	std	Z+9, r17	; 0x09
 20e:	00 87       	std	Z+8, r16	; 0x08
 210:	83 81       	ldd	r24, Z+3	; 0x03
 212:	82 60       	ori	r24, 0x02	; 2
 214:	83 83       	std	Z+3, r24	; 0x03
 216:	80 91 08 01 	lds	r24, 0x0108
 21a:	90 91 09 01 	lds	r25, 0x0109
 21e:	00 97       	sbiw	r24, 0x00	; 0
 220:	89 f4       	brne	.+34     	; 0x244 <fdevopen+0x8a>
 222:	f0 93 09 01 	sts	0x0109, r31
 226:	e0 93 08 01 	sts	0x0108, r30
 22a:	80 91 0a 01 	lds	r24, 0x010A
 22e:	90 91 0b 01 	lds	r25, 0x010B
 232:	00 97       	sbiw	r24, 0x00	; 0
 234:	39 f4       	brne	.+14     	; 0x244 <fdevopen+0x8a>
 236:	f0 93 0b 01 	sts	0x010B, r31
 23a:	e0 93 0a 01 	sts	0x010A, r30
 23e:	02 c0       	rjmp	.+4      	; 0x244 <fdevopen+0x8a>
 240:	20 e0       	ldi	r18, 0x00	; 0
 242:	30 e0       	ldi	r19, 0x00	; 0
 244:	c9 01       	movw	r24, r18
 246:	df 91       	pop	r29
 248:	cf 91       	pop	r28
 24a:	1f 91       	pop	r17
 24c:	0f 91       	pop	r16
 24e:	08 95       	ret

00000250 <calloc>:
 250:	ef 92       	push	r14
 252:	ff 92       	push	r15
 254:	0f 93       	push	r16
 256:	1f 93       	push	r17
 258:	cf 93       	push	r28
 25a:	df 93       	push	r29
 25c:	68 9f       	mul	r22, r24
 25e:	80 01       	movw	r16, r0
 260:	69 9f       	mul	r22, r25
 262:	10 0d       	add	r17, r0
 264:	78 9f       	mul	r23, r24
 266:	10 0d       	add	r17, r0
 268:	11 24       	eor	r1, r1
 26a:	c8 01       	movw	r24, r16
 26c:	0e 94 4c 01 	call	0x298	; 0x298 <malloc>
 270:	e8 2e       	mov	r14, r24
 272:	e7 01       	movw	r28, r14
 274:	7e 01       	movw	r14, r28
 276:	f9 2e       	mov	r15, r25
 278:	e7 01       	movw	r28, r14
 27a:	20 97       	sbiw	r28, 0x00	; 0
 27c:	31 f0       	breq	.+12     	; 0x28a <calloc+0x3a>
 27e:	8e 2d       	mov	r24, r14
 280:	60 e0       	ldi	r22, 0x00	; 0
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	a8 01       	movw	r20, r16
 286:	0e 94 7f 02 	call	0x4fe	; 0x4fe <memset>
 28a:	7e 01       	movw	r14, r28
 28c:	ce 01       	movw	r24, r28
 28e:	cd b7       	in	r28, 0x3d	; 61
 290:	de b7       	in	r29, 0x3e	; 62
 292:	e6 e0       	ldi	r30, 0x06	; 6
 294:	0c 94 92 02 	jmp	0x524	; 0x524 <__epilogue_restores__+0x18>

00000298 <malloc>:
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	82 30       	cpi	r24, 0x02	; 2
 29e:	91 05       	cpc	r25, r1
 2a0:	10 f4       	brcc	.+4      	; 0x2a6 <malloc+0xe>
 2a2:	82 e0       	ldi	r24, 0x02	; 2
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	e0 91 0e 01 	lds	r30, 0x010E
 2aa:	f0 91 0f 01 	lds	r31, 0x010F
 2ae:	40 e0       	ldi	r20, 0x00	; 0
 2b0:	50 e0       	ldi	r21, 0x00	; 0
 2b2:	20 e0       	ldi	r18, 0x00	; 0
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	26 c0       	rjmp	.+76     	; 0x304 <malloc+0x6c>
 2b8:	60 81       	ld	r22, Z
 2ba:	71 81       	ldd	r23, Z+1	; 0x01
 2bc:	68 17       	cp	r22, r24
 2be:	79 07       	cpc	r23, r25
 2c0:	e0 f0       	brcs	.+56     	; 0x2fa <malloc+0x62>
 2c2:	68 17       	cp	r22, r24
 2c4:	79 07       	cpc	r23, r25
 2c6:	81 f4       	brne	.+32     	; 0x2e8 <malloc+0x50>
 2c8:	82 81       	ldd	r24, Z+2	; 0x02
 2ca:	93 81       	ldd	r25, Z+3	; 0x03
 2cc:	21 15       	cp	r18, r1
 2ce:	31 05       	cpc	r19, r1
 2d0:	31 f0       	breq	.+12     	; 0x2de <malloc+0x46>
 2d2:	d9 01       	movw	r26, r18
 2d4:	13 96       	adiw	r26, 0x03	; 3
 2d6:	9c 93       	st	X, r25
 2d8:	8e 93       	st	-X, r24
 2da:	12 97       	sbiw	r26, 0x02	; 2
 2dc:	2b c0       	rjmp	.+86     	; 0x334 <malloc+0x9c>
 2de:	90 93 0f 01 	sts	0x010F, r25
 2e2:	80 93 0e 01 	sts	0x010E, r24
 2e6:	26 c0       	rjmp	.+76     	; 0x334 <malloc+0x9c>
 2e8:	41 15       	cp	r20, r1
 2ea:	51 05       	cpc	r21, r1
 2ec:	19 f0       	breq	.+6      	; 0x2f4 <malloc+0x5c>
 2ee:	64 17       	cp	r22, r20
 2f0:	75 07       	cpc	r23, r21
 2f2:	18 f4       	brcc	.+6      	; 0x2fa <malloc+0x62>
 2f4:	ab 01       	movw	r20, r22
 2f6:	e9 01       	movw	r28, r18
 2f8:	df 01       	movw	r26, r30
 2fa:	9f 01       	movw	r18, r30
 2fc:	72 81       	ldd	r23, Z+2	; 0x02
 2fe:	63 81       	ldd	r22, Z+3	; 0x03
 300:	e7 2f       	mov	r30, r23
 302:	f6 2f       	mov	r31, r22
 304:	30 97       	sbiw	r30, 0x00	; 0
 306:	c1 f6       	brne	.-80     	; 0x2b8 <malloc+0x20>
 308:	41 15       	cp	r20, r1
 30a:	51 05       	cpc	r21, r1
 30c:	01 f1       	breq	.+64     	; 0x34e <malloc+0xb6>
 30e:	48 1b       	sub	r20, r24
 310:	59 0b       	sbc	r21, r25
 312:	44 30       	cpi	r20, 0x04	; 4
 314:	51 05       	cpc	r21, r1
 316:	80 f4       	brcc	.+32     	; 0x338 <malloc+0xa0>
 318:	12 96       	adiw	r26, 0x02	; 2
 31a:	8d 91       	ld	r24, X+
 31c:	9c 91       	ld	r25, X
 31e:	13 97       	sbiw	r26, 0x03	; 3
 320:	20 97       	sbiw	r28, 0x00	; 0
 322:	19 f0       	breq	.+6      	; 0x32a <malloc+0x92>
 324:	9b 83       	std	Y+3, r25	; 0x03
 326:	8a 83       	std	Y+2, r24	; 0x02
 328:	04 c0       	rjmp	.+8      	; 0x332 <malloc+0x9a>
 32a:	90 93 0f 01 	sts	0x010F, r25
 32e:	80 93 0e 01 	sts	0x010E, r24
 332:	fd 01       	movw	r30, r26
 334:	32 96       	adiw	r30, 0x02	; 2
 336:	46 c0       	rjmp	.+140    	; 0x3c4 <malloc+0x12c>
 338:	fd 01       	movw	r30, r26
 33a:	e4 0f       	add	r30, r20
 33c:	f5 1f       	adc	r31, r21
 33e:	81 93       	st	Z+, r24
 340:	91 93       	st	Z+, r25
 342:	42 50       	subi	r20, 0x02	; 2
 344:	50 40       	sbci	r21, 0x00	; 0
 346:	11 96       	adiw	r26, 0x01	; 1
 348:	5c 93       	st	X, r21
 34a:	4e 93       	st	-X, r20
 34c:	3b c0       	rjmp	.+118    	; 0x3c4 <malloc+0x12c>
 34e:	20 91 0c 01 	lds	r18, 0x010C
 352:	30 91 0d 01 	lds	r19, 0x010D
 356:	21 15       	cp	r18, r1
 358:	31 05       	cpc	r19, r1
 35a:	41 f4       	brne	.+16     	; 0x36c <malloc+0xd4>
 35c:	20 91 02 01 	lds	r18, 0x0102
 360:	30 91 03 01 	lds	r19, 0x0103
 364:	30 93 0d 01 	sts	0x010D, r19
 368:	20 93 0c 01 	sts	0x010C, r18
 36c:	20 91 04 01 	lds	r18, 0x0104
 370:	30 91 05 01 	lds	r19, 0x0105
 374:	21 15       	cp	r18, r1
 376:	31 05       	cpc	r19, r1
 378:	41 f4       	brne	.+16     	; 0x38a <malloc+0xf2>
 37a:	2d b7       	in	r18, 0x3d	; 61
 37c:	3e b7       	in	r19, 0x3e	; 62
 37e:	40 91 00 01 	lds	r20, 0x0100
 382:	50 91 01 01 	lds	r21, 0x0101
 386:	24 1b       	sub	r18, r20
 388:	35 0b       	sbc	r19, r21
 38a:	e0 91 0c 01 	lds	r30, 0x010C
 38e:	f0 91 0d 01 	lds	r31, 0x010D
 392:	e2 17       	cp	r30, r18
 394:	f3 07       	cpc	r31, r19
 396:	a0 f4       	brcc	.+40     	; 0x3c0 <malloc+0x128>
 398:	2e 1b       	sub	r18, r30
 39a:	3f 0b       	sbc	r19, r31
 39c:	28 17       	cp	r18, r24
 39e:	39 07       	cpc	r19, r25
 3a0:	78 f0       	brcs	.+30     	; 0x3c0 <malloc+0x128>
 3a2:	ac 01       	movw	r20, r24
 3a4:	4e 5f       	subi	r20, 0xFE	; 254
 3a6:	5f 4f       	sbci	r21, 0xFF	; 255
 3a8:	24 17       	cp	r18, r20
 3aa:	35 07       	cpc	r19, r21
 3ac:	48 f0       	brcs	.+18     	; 0x3c0 <malloc+0x128>
 3ae:	4e 0f       	add	r20, r30
 3b0:	5f 1f       	adc	r21, r31
 3b2:	50 93 0d 01 	sts	0x010D, r21
 3b6:	40 93 0c 01 	sts	0x010C, r20
 3ba:	81 93       	st	Z+, r24
 3bc:	91 93       	st	Z+, r25
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <malloc+0x12c>
 3c0:	e0 e0       	ldi	r30, 0x00	; 0
 3c2:	f0 e0       	ldi	r31, 0x00	; 0
 3c4:	cf 01       	movw	r24, r30
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	08 95       	ret

000003cc <free>:
 3cc:	cf 93       	push	r28
 3ce:	df 93       	push	r29
 3d0:	00 97       	sbiw	r24, 0x00	; 0
 3d2:	09 f4       	brne	.+2      	; 0x3d6 <free+0xa>
 3d4:	91 c0       	rjmp	.+290    	; 0x4f8 <free+0x12c>
 3d6:	fc 01       	movw	r30, r24
 3d8:	32 97       	sbiw	r30, 0x02	; 2
 3da:	13 82       	std	Z+3, r1	; 0x03
 3dc:	12 82       	std	Z+2, r1	; 0x02
 3de:	60 91 0e 01 	lds	r22, 0x010E
 3e2:	70 91 0f 01 	lds	r23, 0x010F
 3e6:	61 15       	cp	r22, r1
 3e8:	71 05       	cpc	r23, r1
 3ea:	81 f4       	brne	.+32     	; 0x40c <free+0x40>
 3ec:	20 81       	ld	r18, Z
 3ee:	31 81       	ldd	r19, Z+1	; 0x01
 3f0:	28 0f       	add	r18, r24
 3f2:	39 1f       	adc	r19, r25
 3f4:	80 91 0c 01 	lds	r24, 0x010C
 3f8:	90 91 0d 01 	lds	r25, 0x010D
 3fc:	82 17       	cp	r24, r18
 3fe:	93 07       	cpc	r25, r19
 400:	99 f5       	brne	.+102    	; 0x468 <free+0x9c>
 402:	f0 93 0d 01 	sts	0x010D, r31
 406:	e0 93 0c 01 	sts	0x010C, r30
 40a:	76 c0       	rjmp	.+236    	; 0x4f8 <free+0x12c>
 40c:	db 01       	movw	r26, r22
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	02 c0       	rjmp	.+4      	; 0x418 <free+0x4c>
 414:	cd 01       	movw	r24, r26
 416:	d9 01       	movw	r26, r18
 418:	ae 17       	cp	r26, r30
 41a:	bf 07       	cpc	r27, r31
 41c:	48 f4       	brcc	.+18     	; 0x430 <free+0x64>
 41e:	12 96       	adiw	r26, 0x02	; 2
 420:	2d 91       	ld	r18, X+
 422:	3c 91       	ld	r19, X
 424:	13 97       	sbiw	r26, 0x03	; 3
 426:	21 15       	cp	r18, r1
 428:	31 05       	cpc	r19, r1
 42a:	a1 f7       	brne	.-24     	; 0x414 <free+0x48>
 42c:	cd 01       	movw	r24, r26
 42e:	21 c0       	rjmp	.+66     	; 0x472 <free+0xa6>
 430:	b3 83       	std	Z+3, r27	; 0x03
 432:	a2 83       	std	Z+2, r26	; 0x02
 434:	ef 01       	movw	r28, r30
 436:	49 91       	ld	r20, Y+
 438:	59 91       	ld	r21, Y+
 43a:	9e 01       	movw	r18, r28
 43c:	24 0f       	add	r18, r20
 43e:	35 1f       	adc	r19, r21
 440:	a2 17       	cp	r26, r18
 442:	b3 07       	cpc	r27, r19
 444:	79 f4       	brne	.+30     	; 0x464 <free+0x98>
 446:	2d 91       	ld	r18, X+
 448:	3c 91       	ld	r19, X
 44a:	11 97       	sbiw	r26, 0x01	; 1
 44c:	24 0f       	add	r18, r20
 44e:	35 1f       	adc	r19, r21
 450:	2e 5f       	subi	r18, 0xFE	; 254
 452:	3f 4f       	sbci	r19, 0xFF	; 255
 454:	31 83       	std	Z+1, r19	; 0x01
 456:	20 83       	st	Z, r18
 458:	12 96       	adiw	r26, 0x02	; 2
 45a:	2d 91       	ld	r18, X+
 45c:	3c 91       	ld	r19, X
 45e:	13 97       	sbiw	r26, 0x03	; 3
 460:	33 83       	std	Z+3, r19	; 0x03
 462:	22 83       	std	Z+2, r18	; 0x02
 464:	00 97       	sbiw	r24, 0x00	; 0
 466:	29 f4       	brne	.+10     	; 0x472 <free+0xa6>
 468:	f0 93 0f 01 	sts	0x010F, r31
 46c:	e0 93 0e 01 	sts	0x010E, r30
 470:	43 c0       	rjmp	.+134    	; 0x4f8 <free+0x12c>
 472:	dc 01       	movw	r26, r24
 474:	13 96       	adiw	r26, 0x03	; 3
 476:	fc 93       	st	X, r31
 478:	ee 93       	st	-X, r30
 47a:	12 97       	sbiw	r26, 0x02	; 2
 47c:	4d 91       	ld	r20, X+
 47e:	5d 91       	ld	r21, X+
 480:	a4 0f       	add	r26, r20
 482:	b5 1f       	adc	r27, r21
 484:	ea 17       	cp	r30, r26
 486:	fb 07       	cpc	r31, r27
 488:	69 f4       	brne	.+26     	; 0x4a4 <free+0xd8>
 48a:	20 81       	ld	r18, Z
 48c:	31 81       	ldd	r19, Z+1	; 0x01
 48e:	24 0f       	add	r18, r20
 490:	35 1f       	adc	r19, r21
 492:	2e 5f       	subi	r18, 0xFE	; 254
 494:	3f 4f       	sbci	r19, 0xFF	; 255
 496:	ec 01       	movw	r28, r24
 498:	39 83       	std	Y+1, r19	; 0x01
 49a:	28 83       	st	Y, r18
 49c:	22 81       	ldd	r18, Z+2	; 0x02
 49e:	33 81       	ldd	r19, Z+3	; 0x03
 4a0:	3b 83       	std	Y+3, r19	; 0x03
 4a2:	2a 83       	std	Y+2, r18	; 0x02
 4a4:	e0 e0       	ldi	r30, 0x00	; 0
 4a6:	f0 e0       	ldi	r31, 0x00	; 0
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <free+0xe2>
 4aa:	fb 01       	movw	r30, r22
 4ac:	bc 01       	movw	r22, r24
 4ae:	db 01       	movw	r26, r22
 4b0:	12 96       	adiw	r26, 0x02	; 2
 4b2:	8d 91       	ld	r24, X+
 4b4:	9c 91       	ld	r25, X
 4b6:	13 97       	sbiw	r26, 0x03	; 3
 4b8:	00 97       	sbiw	r24, 0x00	; 0
 4ba:	b9 f7       	brne	.-18     	; 0x4aa <free+0xde>
 4bc:	9b 01       	movw	r18, r22
 4be:	2e 5f       	subi	r18, 0xFE	; 254
 4c0:	3f 4f       	sbci	r19, 0xFF	; 255
 4c2:	8d 91       	ld	r24, X+
 4c4:	9c 91       	ld	r25, X
 4c6:	11 97       	sbiw	r26, 0x01	; 1
 4c8:	82 0f       	add	r24, r18
 4ca:	93 1f       	adc	r25, r19
 4cc:	40 91 0c 01 	lds	r20, 0x010C
 4d0:	50 91 0d 01 	lds	r21, 0x010D
 4d4:	48 17       	cp	r20, r24
 4d6:	59 07       	cpc	r21, r25
 4d8:	79 f4       	brne	.+30     	; 0x4f8 <free+0x12c>
 4da:	30 97       	sbiw	r30, 0x00	; 0
 4dc:	29 f4       	brne	.+10     	; 0x4e8 <free+0x11c>
 4de:	10 92 0f 01 	sts	0x010F, r1
 4e2:	10 92 0e 01 	sts	0x010E, r1
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <free+0x120>
 4e8:	13 82       	std	Z+3, r1	; 0x03
 4ea:	12 82       	std	Z+2, r1	; 0x02
 4ec:	22 50       	subi	r18, 0x02	; 2
 4ee:	30 40       	sbci	r19, 0x00	; 0
 4f0:	30 93 0d 01 	sts	0x010D, r19
 4f4:	20 93 0c 01 	sts	0x010C, r18
 4f8:	df 91       	pop	r29
 4fa:	cf 91       	pop	r28
 4fc:	08 95       	ret

000004fe <memset>:
 4fe:	dc 01       	movw	r26, r24
 500:	01 c0       	rjmp	.+2      	; 0x504 <__stack+0x5>
 502:	6d 93       	st	X+, r22
 504:	41 50       	subi	r20, 0x01	; 1
 506:	50 40       	sbci	r21, 0x00	; 0
 508:	e0 f7       	brcc	.-8      	; 0x502 <__stack+0x3>
 50a:	08 95       	ret

0000050c <__epilogue_restores__>:
 50c:	2a 88       	ldd	r2, Y+18	; 0x12
 50e:	39 88       	ldd	r3, Y+17	; 0x11
 510:	48 88       	ldd	r4, Y+16	; 0x10
 512:	5f 84       	ldd	r5, Y+15	; 0x0f
 514:	6e 84       	ldd	r6, Y+14	; 0x0e
 516:	7d 84       	ldd	r7, Y+13	; 0x0d
 518:	8c 84       	ldd	r8, Y+12	; 0x0c
 51a:	9b 84       	ldd	r9, Y+11	; 0x0b
 51c:	aa 84       	ldd	r10, Y+10	; 0x0a
 51e:	b9 84       	ldd	r11, Y+9	; 0x09
 520:	c8 84       	ldd	r12, Y+8	; 0x08
 522:	df 80       	ldd	r13, Y+7	; 0x07
 524:	ee 80       	ldd	r14, Y+6	; 0x06
 526:	fd 80       	ldd	r15, Y+5	; 0x05
 528:	0c 81       	ldd	r16, Y+4	; 0x04
 52a:	1b 81       	ldd	r17, Y+3	; 0x03
 52c:	aa 81       	ldd	r26, Y+2	; 0x02
 52e:	b9 81       	ldd	r27, Y+1	; 0x01
 530:	ce 0f       	add	r28, r30
 532:	d1 1d       	adc	r29, r1
 534:	0f b6       	in	r0, 0x3f	; 63
 536:	f8 94       	cli
 538:	de bf       	out	0x3e, r29	; 62
 53a:	0f be       	out	0x3f, r0	; 63
 53c:	cd bf       	out	0x3d, r28	; 61
 53e:	ed 01       	movw	r28, r26
 540:	08 95       	ret

00000542 <_exit>:
 542:	f8 94       	cli

00000544 <__stop_program>:
 544:	ff cf       	rjmp	.-2      	; 0x544 <__stop_program>
